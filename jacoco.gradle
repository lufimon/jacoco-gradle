apply plugin: 'jacoco'

android {
    testOptions {
        animationsDisabled true
        unitTests {
            includeAndroidResources = true
        }
    }
    lintOptions {
        abortOnError false
    }
}

project.afterEvaluate {
    task "createUnitTestCoverageReport"(type: JacocoReport, dependsOn: ["testUatDebugUnitTest"]) {
        reports {
            xml.enabled = true
            html.enabled = true
            xml.destination = file("${project.buildDir}/reports/jacoco/jacocoTestReport.xml")
            html.destination = file("${project.buildDir}/reports/jacoco")
        }

        group = "Reporting"
        description = "Generate Jacoco coverage reports on the UatDebug build."

        def fileFilter = [
                '**/*Test*.*',
                '**/AutoValue_*.*',
                '**/*JavascriptBridge.class',
                '**/R.class',
                '**/R$*.class',
                '**/Manifest*.*',
                'android/**/*.*',
                '**/BuildConfig.*',
                '**/*$ViewBinder*.*',
                '**/*$ViewInjector*.*',
                '**/Lambda$*.class',
                '**/Lambda.class',
                '**/*Lambda.class',
                '**/*Lambda*.class',
                '**/*$InjectAdapter.class',
                '**/*$ModuleAdapter.class',
                '**/*$ViewInjector*.class',
                '**/*_MembersInjector.class',
                '*/*_MembersInjector*.*',
                '**/*_*Factory*.*',
                '*/*Component*.*',
                '**/*Module*.*',
                '**/*_Provide*Factory*.*',
                '**/*Dagger*.*',
                '**/*$*$*.*'
        ]

        def kotlinDebugTree = fileTree(dir: "${project.buildDir}/tmp/kotlin-classes/uatDebug", excludes: fileFilter)

        def kotlinDebugUnitTree = fileTree(dir: "${project.buildDir}/tmp/kotlin-classes/uatDebugUnitTest", excludes: fileFilter)

        def mainSrc = "${project.projectDir}/src/main/java"

        sourceDirectories.from = files([mainSrc])
        classDirectories.from = files([kotlinDebugTree, kotlinDebugUnitTree])
        executionData.from = fileTree(dir: "$buildDir", includes: [
                "jacoco/testUatDebugUnitTest.exec",
                "outputs/code-coverage/connected/*coverage.ec"
        ])
    }
}
